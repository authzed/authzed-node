// source: authzed/api/v1/core.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var validate_validate_pb = require('../../../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
goog.exportSymbol('proto.authzed.api.v1.AlgebraicSubjectSet', null, global);
goog.exportSymbol('proto.authzed.api.v1.AlgebraicSubjectSet.Operation', null, global);
goog.exportSymbol('proto.authzed.api.v1.DirectSubjectSet', null, global);
goog.exportSymbol('proto.authzed.api.v1.ObjectReference', null, global);
goog.exportSymbol('proto.authzed.api.v1.PermissionRelationshipTree', null, global);
goog.exportSymbol('proto.authzed.api.v1.PermissionRelationshipTree.TreeTypeCase', null, global);
goog.exportSymbol('proto.authzed.api.v1.Relationship', null, global);
goog.exportSymbol('proto.authzed.api.v1.RelationshipUpdate', null, global);
goog.exportSymbol('proto.authzed.api.v1.RelationshipUpdate.Operation', null, global);
goog.exportSymbol('proto.authzed.api.v1.SubjectReference', null, global);
goog.exportSymbol('proto.authzed.api.v1.ZedToken', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.Relationship = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.Relationship, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.Relationship.displayName = 'proto.authzed.api.v1.Relationship';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.SubjectReference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.SubjectReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.SubjectReference.displayName = 'proto.authzed.api.v1.SubjectReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.ObjectReference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.ObjectReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.ObjectReference.displayName = 'proto.authzed.api.v1.ObjectReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.ZedToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.ZedToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.ZedToken.displayName = 'proto.authzed.api.v1.ZedToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.RelationshipUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.RelationshipUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.RelationshipUpdate.displayName = 'proto.authzed.api.v1.RelationshipUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.PermissionRelationshipTree = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.authzed.api.v1.PermissionRelationshipTree.oneofGroups_);
};
goog.inherits(proto.authzed.api.v1.PermissionRelationshipTree, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.PermissionRelationshipTree.displayName = 'proto.authzed.api.v1.PermissionRelationshipTree';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.AlgebraicSubjectSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.authzed.api.v1.AlgebraicSubjectSet.repeatedFields_, null);
};
goog.inherits(proto.authzed.api.v1.AlgebraicSubjectSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.AlgebraicSubjectSet.displayName = 'proto.authzed.api.v1.AlgebraicSubjectSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.DirectSubjectSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.authzed.api.v1.DirectSubjectSet.repeatedFields_, null);
};
goog.inherits(proto.authzed.api.v1.DirectSubjectSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.DirectSubjectSet.displayName = 'proto.authzed.api.v1.DirectSubjectSet';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.Relationship.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.Relationship.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.Relationship} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.Relationship.toObject = function(includeInstance, msg) {
  var f, obj = {
    resource: (f = msg.getResource()) && proto.authzed.api.v1.ObjectReference.toObject(includeInstance, f),
    relation: jspb.Message.getFieldWithDefault(msg, 2, ""),
    subject: (f = msg.getSubject()) && proto.authzed.api.v1.SubjectReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.Relationship}
 */
proto.authzed.api.v1.Relationship.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.Relationship;
  return proto.authzed.api.v1.Relationship.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.Relationship} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.Relationship}
 */
proto.authzed.api.v1.Relationship.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authzed.api.v1.ObjectReference;
      reader.readMessage(value,proto.authzed.api.v1.ObjectReference.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelation(value);
      break;
    case 3:
      var value = new proto.authzed.api.v1.SubjectReference;
      reader.readMessage(value,proto.authzed.api.v1.SubjectReference.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.Relationship.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.Relationship.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.Relationship} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.Relationship.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.authzed.api.v1.ObjectReference.serializeBinaryToWriter
    );
  }
  f = message.getRelation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.authzed.api.v1.SubjectReference.serializeBinaryToWriter
    );
  }
};


/**
 * optional ObjectReference resource = 1;
 * @return {?proto.authzed.api.v1.ObjectReference}
 */
proto.authzed.api.v1.Relationship.prototype.getResource = function() {
  return /** @type{?proto.authzed.api.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.ObjectReference, 1));
};


/**
 * @param {?proto.authzed.api.v1.ObjectReference|undefined} value
 * @return {!proto.authzed.api.v1.Relationship} returns this
*/
proto.authzed.api.v1.Relationship.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.Relationship} returns this
 */
proto.authzed.api.v1.Relationship.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.Relationship.prototype.hasResource = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string relation = 2;
 * @return {string}
 */
proto.authzed.api.v1.Relationship.prototype.getRelation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.Relationship} returns this
 */
proto.authzed.api.v1.Relationship.prototype.setRelation = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SubjectReference subject = 3;
 * @return {?proto.authzed.api.v1.SubjectReference}
 */
proto.authzed.api.v1.Relationship.prototype.getSubject = function() {
  return /** @type{?proto.authzed.api.v1.SubjectReference} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.SubjectReference, 3));
};


/**
 * @param {?proto.authzed.api.v1.SubjectReference|undefined} value
 * @return {!proto.authzed.api.v1.Relationship} returns this
*/
proto.authzed.api.v1.Relationship.prototype.setSubject = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.Relationship} returns this
 */
proto.authzed.api.v1.Relationship.prototype.clearSubject = function() {
  return this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.Relationship.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.SubjectReference.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.SubjectReference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.SubjectReference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.SubjectReference.toObject = function(includeInstance, msg) {
  var f, obj = {
    object: (f = msg.getObject()) && proto.authzed.api.v1.ObjectReference.toObject(includeInstance, f),
    optionalRelation: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.SubjectReference}
 */
proto.authzed.api.v1.SubjectReference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.SubjectReference;
  return proto.authzed.api.v1.SubjectReference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.SubjectReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.SubjectReference}
 */
proto.authzed.api.v1.SubjectReference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authzed.api.v1.ObjectReference;
      reader.readMessage(value,proto.authzed.api.v1.ObjectReference.deserializeBinaryFromReader);
      msg.setObject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalRelation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.SubjectReference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.SubjectReference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.SubjectReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.SubjectReference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObject();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.authzed.api.v1.ObjectReference.serializeBinaryToWriter
    );
  }
  f = message.getOptionalRelation();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ObjectReference object = 1;
 * @return {?proto.authzed.api.v1.ObjectReference}
 */
proto.authzed.api.v1.SubjectReference.prototype.getObject = function() {
  return /** @type{?proto.authzed.api.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.ObjectReference, 1));
};


/**
 * @param {?proto.authzed.api.v1.ObjectReference|undefined} value
 * @return {!proto.authzed.api.v1.SubjectReference} returns this
*/
proto.authzed.api.v1.SubjectReference.prototype.setObject = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.SubjectReference} returns this
 */
proto.authzed.api.v1.SubjectReference.prototype.clearObject = function() {
  return this.setObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.SubjectReference.prototype.hasObject = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string optional_relation = 2;
 * @return {string}
 */
proto.authzed.api.v1.SubjectReference.prototype.getOptionalRelation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.SubjectReference} returns this
 */
proto.authzed.api.v1.SubjectReference.prototype.setOptionalRelation = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.ObjectReference.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.ObjectReference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.ObjectReference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.ObjectReference.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    objectId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.ObjectReference}
 */
proto.authzed.api.v1.ObjectReference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.ObjectReference;
  return proto.authzed.api.v1.ObjectReference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.ObjectReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.ObjectReference}
 */
proto.authzed.api.v1.ObjectReference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.ObjectReference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.ObjectReference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.ObjectReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.ObjectReference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getObjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string object_type = 1;
 * @return {string}
 */
proto.authzed.api.v1.ObjectReference.prototype.getObjectType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.ObjectReference} returns this
 */
proto.authzed.api.v1.ObjectReference.prototype.setObjectType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string object_id = 2;
 * @return {string}
 */
proto.authzed.api.v1.ObjectReference.prototype.getObjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.ObjectReference} returns this
 */
proto.authzed.api.v1.ObjectReference.prototype.setObjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.ZedToken.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.ZedToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.ZedToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.ZedToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.ZedToken}
 */
proto.authzed.api.v1.ZedToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.ZedToken;
  return proto.authzed.api.v1.ZedToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.ZedToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.ZedToken}
 */
proto.authzed.api.v1.ZedToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.ZedToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.ZedToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.ZedToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.ZedToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.authzed.api.v1.ZedToken.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.ZedToken} returns this
 */
proto.authzed.api.v1.ZedToken.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.RelationshipUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.RelationshipUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.RelationshipUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.RelationshipUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    operation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    relationship: (f = msg.getRelationship()) && proto.authzed.api.v1.Relationship.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.RelationshipUpdate}
 */
proto.authzed.api.v1.RelationshipUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.RelationshipUpdate;
  return proto.authzed.api.v1.RelationshipUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.RelationshipUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.RelationshipUpdate}
 */
proto.authzed.api.v1.RelationshipUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.authzed.api.v1.RelationshipUpdate.Operation} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    case 2:
      var value = new proto.authzed.api.v1.Relationship;
      reader.readMessage(value,proto.authzed.api.v1.Relationship.deserializeBinaryFromReader);
      msg.setRelationship(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.RelationshipUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.RelationshipUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.RelationshipUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.RelationshipUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRelationship();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.authzed.api.v1.Relationship.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.authzed.api.v1.RelationshipUpdate.Operation = {
  OPERATION_UNSPECIFIED: 0,
  OPERATION_CREATE: 1,
  OPERATION_TOUCH: 2,
  OPERATION_DELETE: 3
};

/**
 * optional Operation operation = 1;
 * @return {!proto.authzed.api.v1.RelationshipUpdate.Operation}
 */
proto.authzed.api.v1.RelationshipUpdate.prototype.getOperation = function() {
  return /** @type {!proto.authzed.api.v1.RelationshipUpdate.Operation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.authzed.api.v1.RelationshipUpdate.Operation} value
 * @return {!proto.authzed.api.v1.RelationshipUpdate} returns this
 */
proto.authzed.api.v1.RelationshipUpdate.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Relationship relationship = 2;
 * @return {?proto.authzed.api.v1.Relationship}
 */
proto.authzed.api.v1.RelationshipUpdate.prototype.getRelationship = function() {
  return /** @type{?proto.authzed.api.v1.Relationship} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.Relationship, 2));
};


/**
 * @param {?proto.authzed.api.v1.Relationship|undefined} value
 * @return {!proto.authzed.api.v1.RelationshipUpdate} returns this
*/
proto.authzed.api.v1.RelationshipUpdate.prototype.setRelationship = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.RelationshipUpdate} returns this
 */
proto.authzed.api.v1.RelationshipUpdate.prototype.clearRelationship = function() {
  return this.setRelationship(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.RelationshipUpdate.prototype.hasRelationship = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.authzed.api.v1.PermissionRelationshipTree.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.authzed.api.v1.PermissionRelationshipTree.TreeTypeCase = {
  TREE_TYPE_NOT_SET: 0,
  INTERMEDIATE: 1,
  LEAF: 2
};

/**
 * @return {proto.authzed.api.v1.PermissionRelationshipTree.TreeTypeCase}
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.getTreeTypeCase = function() {
  return /** @type {proto.authzed.api.v1.PermissionRelationshipTree.TreeTypeCase} */(jspb.Message.computeOneofCase(this, proto.authzed.api.v1.PermissionRelationshipTree.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.PermissionRelationshipTree.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.PermissionRelationshipTree} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.PermissionRelationshipTree.toObject = function(includeInstance, msg) {
  var f, obj = {
    intermediate: (f = msg.getIntermediate()) && proto.authzed.api.v1.AlgebraicSubjectSet.toObject(includeInstance, f),
    leaf: (f = msg.getLeaf()) && proto.authzed.api.v1.DirectSubjectSet.toObject(includeInstance, f),
    expandedObject: (f = msg.getExpandedObject()) && proto.authzed.api.v1.ObjectReference.toObject(includeInstance, f),
    expandedRelation: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.PermissionRelationshipTree}
 */
proto.authzed.api.v1.PermissionRelationshipTree.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.PermissionRelationshipTree;
  return proto.authzed.api.v1.PermissionRelationshipTree.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.PermissionRelationshipTree} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.PermissionRelationshipTree}
 */
proto.authzed.api.v1.PermissionRelationshipTree.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authzed.api.v1.AlgebraicSubjectSet;
      reader.readMessage(value,proto.authzed.api.v1.AlgebraicSubjectSet.deserializeBinaryFromReader);
      msg.setIntermediate(value);
      break;
    case 2:
      var value = new proto.authzed.api.v1.DirectSubjectSet;
      reader.readMessage(value,proto.authzed.api.v1.DirectSubjectSet.deserializeBinaryFromReader);
      msg.setLeaf(value);
      break;
    case 3:
      var value = new proto.authzed.api.v1.ObjectReference;
      reader.readMessage(value,proto.authzed.api.v1.ObjectReference.deserializeBinaryFromReader);
      msg.setExpandedObject(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpandedRelation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.PermissionRelationshipTree.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.PermissionRelationshipTree} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.PermissionRelationshipTree.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntermediate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.authzed.api.v1.AlgebraicSubjectSet.serializeBinaryToWriter
    );
  }
  f = message.getLeaf();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.authzed.api.v1.DirectSubjectSet.serializeBinaryToWriter
    );
  }
  f = message.getExpandedObject();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.authzed.api.v1.ObjectReference.serializeBinaryToWriter
    );
  }
  f = message.getExpandedRelation();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional AlgebraicSubjectSet intermediate = 1;
 * @return {?proto.authzed.api.v1.AlgebraicSubjectSet}
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.getIntermediate = function() {
  return /** @type{?proto.authzed.api.v1.AlgebraicSubjectSet} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.AlgebraicSubjectSet, 1));
};


/**
 * @param {?proto.authzed.api.v1.AlgebraicSubjectSet|undefined} value
 * @return {!proto.authzed.api.v1.PermissionRelationshipTree} returns this
*/
proto.authzed.api.v1.PermissionRelationshipTree.prototype.setIntermediate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.authzed.api.v1.PermissionRelationshipTree.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.PermissionRelationshipTree} returns this
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.clearIntermediate = function() {
  return this.setIntermediate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.hasIntermediate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DirectSubjectSet leaf = 2;
 * @return {?proto.authzed.api.v1.DirectSubjectSet}
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.getLeaf = function() {
  return /** @type{?proto.authzed.api.v1.DirectSubjectSet} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.DirectSubjectSet, 2));
};


/**
 * @param {?proto.authzed.api.v1.DirectSubjectSet|undefined} value
 * @return {!proto.authzed.api.v1.PermissionRelationshipTree} returns this
*/
proto.authzed.api.v1.PermissionRelationshipTree.prototype.setLeaf = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.authzed.api.v1.PermissionRelationshipTree.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.PermissionRelationshipTree} returns this
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.clearLeaf = function() {
  return this.setLeaf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.hasLeaf = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ObjectReference expanded_object = 3;
 * @return {?proto.authzed.api.v1.ObjectReference}
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.getExpandedObject = function() {
  return /** @type{?proto.authzed.api.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.ObjectReference, 3));
};


/**
 * @param {?proto.authzed.api.v1.ObjectReference|undefined} value
 * @return {!proto.authzed.api.v1.PermissionRelationshipTree} returns this
*/
proto.authzed.api.v1.PermissionRelationshipTree.prototype.setExpandedObject = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.PermissionRelationshipTree} returns this
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.clearExpandedObject = function() {
  return this.setExpandedObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.hasExpandedObject = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string expanded_relation = 4;
 * @return {string}
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.getExpandedRelation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.PermissionRelationshipTree} returns this
 */
proto.authzed.api.v1.PermissionRelationshipTree.prototype.setExpandedRelation = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.authzed.api.v1.AlgebraicSubjectSet.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.AlgebraicSubjectSet.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.AlgebraicSubjectSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.AlgebraicSubjectSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.AlgebraicSubjectSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    operation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    childrenList: jspb.Message.toObjectList(msg.getChildrenList(),
    proto.authzed.api.v1.PermissionRelationshipTree.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.AlgebraicSubjectSet}
 */
proto.authzed.api.v1.AlgebraicSubjectSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.AlgebraicSubjectSet;
  return proto.authzed.api.v1.AlgebraicSubjectSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.AlgebraicSubjectSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.AlgebraicSubjectSet}
 */
proto.authzed.api.v1.AlgebraicSubjectSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.authzed.api.v1.AlgebraicSubjectSet.Operation} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    case 2:
      var value = new proto.authzed.api.v1.PermissionRelationshipTree;
      reader.readMessage(value,proto.authzed.api.v1.PermissionRelationshipTree.deserializeBinaryFromReader);
      msg.addChildren(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.AlgebraicSubjectSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.AlgebraicSubjectSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.AlgebraicSubjectSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.AlgebraicSubjectSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getChildrenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.authzed.api.v1.PermissionRelationshipTree.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.authzed.api.v1.AlgebraicSubjectSet.Operation = {
  OPERATION_UNSPECIFIED: 0,
  OPERATION_UNION: 1,
  OPERATION_INTERSECTION: 2,
  OPERATION_EXCLUSION: 3
};

/**
 * optional Operation operation = 1;
 * @return {!proto.authzed.api.v1.AlgebraicSubjectSet.Operation}
 */
proto.authzed.api.v1.AlgebraicSubjectSet.prototype.getOperation = function() {
  return /** @type {!proto.authzed.api.v1.AlgebraicSubjectSet.Operation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.authzed.api.v1.AlgebraicSubjectSet.Operation} value
 * @return {!proto.authzed.api.v1.AlgebraicSubjectSet} returns this
 */
proto.authzed.api.v1.AlgebraicSubjectSet.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated PermissionRelationshipTree children = 2;
 * @return {!Array<!proto.authzed.api.v1.PermissionRelationshipTree>}
 */
proto.authzed.api.v1.AlgebraicSubjectSet.prototype.getChildrenList = function() {
  return /** @type{!Array<!proto.authzed.api.v1.PermissionRelationshipTree>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.authzed.api.v1.PermissionRelationshipTree, 2));
};


/**
 * @param {!Array<!proto.authzed.api.v1.PermissionRelationshipTree>} value
 * @return {!proto.authzed.api.v1.AlgebraicSubjectSet} returns this
*/
proto.authzed.api.v1.AlgebraicSubjectSet.prototype.setChildrenList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.authzed.api.v1.PermissionRelationshipTree=} opt_value
 * @param {number=} opt_index
 * @return {!proto.authzed.api.v1.PermissionRelationshipTree}
 */
proto.authzed.api.v1.AlgebraicSubjectSet.prototype.addChildren = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.authzed.api.v1.PermissionRelationshipTree, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authzed.api.v1.AlgebraicSubjectSet} returns this
 */
proto.authzed.api.v1.AlgebraicSubjectSet.prototype.clearChildrenList = function() {
  return this.setChildrenList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.authzed.api.v1.DirectSubjectSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.DirectSubjectSet.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.DirectSubjectSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.DirectSubjectSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.DirectSubjectSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    subjectsList: jspb.Message.toObjectList(msg.getSubjectsList(),
    proto.authzed.api.v1.SubjectReference.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.DirectSubjectSet}
 */
proto.authzed.api.v1.DirectSubjectSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.DirectSubjectSet;
  return proto.authzed.api.v1.DirectSubjectSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.DirectSubjectSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.DirectSubjectSet}
 */
proto.authzed.api.v1.DirectSubjectSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authzed.api.v1.SubjectReference;
      reader.readMessage(value,proto.authzed.api.v1.SubjectReference.deserializeBinaryFromReader);
      msg.addSubjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.DirectSubjectSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.DirectSubjectSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.DirectSubjectSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.DirectSubjectSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.authzed.api.v1.SubjectReference.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SubjectReference subjects = 1;
 * @return {!Array<!proto.authzed.api.v1.SubjectReference>}
 */
proto.authzed.api.v1.DirectSubjectSet.prototype.getSubjectsList = function() {
  return /** @type{!Array<!proto.authzed.api.v1.SubjectReference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.authzed.api.v1.SubjectReference, 1));
};


/**
 * @param {!Array<!proto.authzed.api.v1.SubjectReference>} value
 * @return {!proto.authzed.api.v1.DirectSubjectSet} returns this
*/
proto.authzed.api.v1.DirectSubjectSet.prototype.setSubjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.authzed.api.v1.SubjectReference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.authzed.api.v1.SubjectReference}
 */
proto.authzed.api.v1.DirectSubjectSet.prototype.addSubjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.authzed.api.v1.SubjectReference, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authzed.api.v1.DirectSubjectSet} returns this
 */
proto.authzed.api.v1.DirectSubjectSet.prototype.clearSubjectsList = function() {
  return this.setSubjectsList([]);
};


goog.object.extend(exports, proto.authzed.api.v1);
