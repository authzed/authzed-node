// @generated by protobuf-ts 2.9.1 with parameter generate_dependencies,long_type_string,client_grpc1
// @generated from protobuf file "authzed/api/v1/experimental_service.proto" (package "authzed.api.v1", syntax proto3)
// tslint:disable
import { ExperimentalService } from "./experimental_service.js";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { ExperimentalUnregisterRelationshipCounterResponse } from "./experimental_service.js";
import type { ExperimentalUnregisterRelationshipCounterRequest } from "./experimental_service.js";
import type { ExperimentalCountRelationshipsResponse } from "./experimental_service.js";
import type { ExperimentalCountRelationshipsRequest } from "./experimental_service.js";
import type { ExperimentalRegisterRelationshipCounterResponse } from "./experimental_service.js";
import type { ExperimentalRegisterRelationshipCounterRequest } from "./experimental_service.js";
import type { ExperimentalDiffSchemaResponse } from "./experimental_service.js";
import type { ExperimentalDiffSchemaRequest } from "./experimental_service.js";
import type { ExperimentalDependentRelationsResponse } from "./experimental_service.js";
import type { ExperimentalDependentRelationsRequest } from "./experimental_service.js";
import type { ExperimentalComputablePermissionsResponse } from "./experimental_service.js";
import type { ExperimentalComputablePermissionsRequest } from "./experimental_service.js";
import type { ExperimentalReflectSchemaResponse } from "./experimental_service.js";
import type { ExperimentalReflectSchemaRequest } from "./experimental_service.js";
import type { BulkCheckPermissionResponse } from "./experimental_service.js";
import type { BulkCheckPermissionRequest } from "./experimental_service.js";
import type { BulkExportRelationshipsResponse } from "./experimental_service.js";
import type { BulkExportRelationshipsRequest } from "./experimental_service.js";
import type { BulkImportRelationshipsRequest } from "./experimental_service.js";
import type { BulkImportRelationshipsResponse } from "./experimental_service.js";
import * as grpc from "@grpc/grpc-js";
/**
 * ExperimentalService exposes a number of APIs that are currently being
 * prototyped and tested for future inclusion in the stable API.
 *
 * @generated from protobuf service authzed.api.v1.ExperimentalService
 */
export interface IExperimentalServiceClient {
    /**
     * DEPRECATED: Promoted to ImportBulkRelationships in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: BulkImportRelationships(stream authzed.api.v1.BulkImportRelationshipsRequest) returns (authzed.api.v1.BulkImportRelationshipsResponse);
     */
    bulkImportRelationships(metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: BulkImportRelationshipsResponse) => void): grpc.ClientWritableStream<BulkImportRelationshipsRequest>;
    bulkImportRelationships(metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: BulkImportRelationshipsResponse) => void): grpc.ClientWritableStream<BulkImportRelationshipsRequest>;
    bulkImportRelationships(options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: BulkImportRelationshipsResponse) => void): grpc.ClientWritableStream<BulkImportRelationshipsRequest>;
    bulkImportRelationships(callback: (err: grpc.ServiceError | null, value?: BulkImportRelationshipsResponse) => void): grpc.ClientWritableStream<BulkImportRelationshipsRequest>;
    /**
     * DEPRECATED: Promoted to ExportBulkRelationships in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: BulkExportRelationships(authzed.api.v1.BulkExportRelationshipsRequest) returns (stream authzed.api.v1.BulkExportRelationshipsResponse);
     */
    bulkExportRelationships(input: BulkExportRelationshipsRequest, metadata?: grpc.Metadata, options?: grpc.CallOptions): grpc.ClientReadableStream<BulkExportRelationshipsResponse>;
    bulkExportRelationships(input: BulkExportRelationshipsRequest, options?: grpc.CallOptions): grpc.ClientReadableStream<BulkExportRelationshipsResponse>;
    /**
     * DEPRECATED: Promoted to CheckBulkPermission in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: BulkCheckPermission(authzed.api.v1.BulkCheckPermissionRequest) returns (authzed.api.v1.BulkCheckPermissionResponse);
     */
    bulkCheckPermission(input: BulkCheckPermissionRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: BulkCheckPermissionResponse) => void): grpc.ClientUnaryCall;
    bulkCheckPermission(input: BulkCheckPermissionRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: BulkCheckPermissionResponse) => void): grpc.ClientUnaryCall;
    bulkCheckPermission(input: BulkCheckPermissionRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: BulkCheckPermissionResponse) => void): grpc.ClientUnaryCall;
    bulkCheckPermission(input: BulkCheckPermissionRequest, callback: (err: grpc.ServiceError | null, value?: BulkCheckPermissionResponse) => void): grpc.ClientUnaryCall;
    /**
     * DEPRECATED: Promoted to ReflectSchema in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: ExperimentalReflectSchema(authzed.api.v1.ExperimentalReflectSchemaRequest) returns (authzed.api.v1.ExperimentalReflectSchemaResponse);
     */
    experimentalReflectSchema(input: ExperimentalReflectSchemaRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalReflectSchemaResponse) => void): grpc.ClientUnaryCall;
    experimentalReflectSchema(input: ExperimentalReflectSchemaRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: ExperimentalReflectSchemaResponse) => void): grpc.ClientUnaryCall;
    experimentalReflectSchema(input: ExperimentalReflectSchemaRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalReflectSchemaResponse) => void): grpc.ClientUnaryCall;
    experimentalReflectSchema(input: ExperimentalReflectSchemaRequest, callback: (err: grpc.ServiceError | null, value?: ExperimentalReflectSchemaResponse) => void): grpc.ClientUnaryCall;
    /**
     * DEPRECATED: Promoted to ComputablePermissions in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: ExperimentalComputablePermissions(authzed.api.v1.ExperimentalComputablePermissionsRequest) returns (authzed.api.v1.ExperimentalComputablePermissionsResponse);
     */
    experimentalComputablePermissions(input: ExperimentalComputablePermissionsRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalComputablePermissionsResponse) => void): grpc.ClientUnaryCall;
    experimentalComputablePermissions(input: ExperimentalComputablePermissionsRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: ExperimentalComputablePermissionsResponse) => void): grpc.ClientUnaryCall;
    experimentalComputablePermissions(input: ExperimentalComputablePermissionsRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalComputablePermissionsResponse) => void): grpc.ClientUnaryCall;
    experimentalComputablePermissions(input: ExperimentalComputablePermissionsRequest, callback: (err: grpc.ServiceError | null, value?: ExperimentalComputablePermissionsResponse) => void): grpc.ClientUnaryCall;
    /**
     * DEPRECATED: Promoted to DependentRelations in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: ExperimentalDependentRelations(authzed.api.v1.ExperimentalDependentRelationsRequest) returns (authzed.api.v1.ExperimentalDependentRelationsResponse);
     */
    experimentalDependentRelations(input: ExperimentalDependentRelationsRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalDependentRelationsResponse) => void): grpc.ClientUnaryCall;
    experimentalDependentRelations(input: ExperimentalDependentRelationsRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: ExperimentalDependentRelationsResponse) => void): grpc.ClientUnaryCall;
    experimentalDependentRelations(input: ExperimentalDependentRelationsRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalDependentRelationsResponse) => void): grpc.ClientUnaryCall;
    experimentalDependentRelations(input: ExperimentalDependentRelationsRequest, callback: (err: grpc.ServiceError | null, value?: ExperimentalDependentRelationsResponse) => void): grpc.ClientUnaryCall;
    /**
     * DEPRECATED: Promoted to DiffSchema in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: ExperimentalDiffSchema(authzed.api.v1.ExperimentalDiffSchemaRequest) returns (authzed.api.v1.ExperimentalDiffSchemaResponse);
     */
    experimentalDiffSchema(input: ExperimentalDiffSchemaRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalDiffSchemaResponse) => void): grpc.ClientUnaryCall;
    experimentalDiffSchema(input: ExperimentalDiffSchemaRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: ExperimentalDiffSchemaResponse) => void): grpc.ClientUnaryCall;
    experimentalDiffSchema(input: ExperimentalDiffSchemaRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalDiffSchemaResponse) => void): grpc.ClientUnaryCall;
    experimentalDiffSchema(input: ExperimentalDiffSchemaRequest, callback: (err: grpc.ServiceError | null, value?: ExperimentalDiffSchemaResponse) => void): grpc.ClientUnaryCall;
    /**
     * EXPERIMENTAL: RegisterRelationshipCounter registers a new filter for counting relationships. A filter must be registered before
     * a count can be requested.
     *
     * @generated from protobuf rpc: ExperimentalRegisterRelationshipCounter(authzed.api.v1.ExperimentalRegisterRelationshipCounterRequest) returns (authzed.api.v1.ExperimentalRegisterRelationshipCounterResponse);
     */
    experimentalRegisterRelationshipCounter(input: ExperimentalRegisterRelationshipCounterRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalRegisterRelationshipCounterResponse) => void): grpc.ClientUnaryCall;
    experimentalRegisterRelationshipCounter(input: ExperimentalRegisterRelationshipCounterRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: ExperimentalRegisterRelationshipCounterResponse) => void): grpc.ClientUnaryCall;
    experimentalRegisterRelationshipCounter(input: ExperimentalRegisterRelationshipCounterRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalRegisterRelationshipCounterResponse) => void): grpc.ClientUnaryCall;
    experimentalRegisterRelationshipCounter(input: ExperimentalRegisterRelationshipCounterRequest, callback: (err: grpc.ServiceError | null, value?: ExperimentalRegisterRelationshipCounterResponse) => void): grpc.ClientUnaryCall;
    /**
     * EXPERIMENTAL: CountRelationships returns the count of relationships for *pre-registered* filter.
     *
     * @generated from protobuf rpc: ExperimentalCountRelationships(authzed.api.v1.ExperimentalCountRelationshipsRequest) returns (authzed.api.v1.ExperimentalCountRelationshipsResponse);
     */
    experimentalCountRelationships(input: ExperimentalCountRelationshipsRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalCountRelationshipsResponse) => void): grpc.ClientUnaryCall;
    experimentalCountRelationships(input: ExperimentalCountRelationshipsRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: ExperimentalCountRelationshipsResponse) => void): grpc.ClientUnaryCall;
    experimentalCountRelationships(input: ExperimentalCountRelationshipsRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalCountRelationshipsResponse) => void): grpc.ClientUnaryCall;
    experimentalCountRelationships(input: ExperimentalCountRelationshipsRequest, callback: (err: grpc.ServiceError | null, value?: ExperimentalCountRelationshipsResponse) => void): grpc.ClientUnaryCall;
    /**
     * EXPERIMENTAL: UnregisterRelationshipCounter unregisters an existing filter for counting relationships.
     *
     * @generated from protobuf rpc: ExperimentalUnregisterRelationshipCounter(authzed.api.v1.ExperimentalUnregisterRelationshipCounterRequest) returns (authzed.api.v1.ExperimentalUnregisterRelationshipCounterResponse);
     */
    experimentalUnregisterRelationshipCounter(input: ExperimentalUnregisterRelationshipCounterRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalUnregisterRelationshipCounterResponse) => void): grpc.ClientUnaryCall;
    experimentalUnregisterRelationshipCounter(input: ExperimentalUnregisterRelationshipCounterRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: ExperimentalUnregisterRelationshipCounterResponse) => void): grpc.ClientUnaryCall;
    experimentalUnregisterRelationshipCounter(input: ExperimentalUnregisterRelationshipCounterRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ExperimentalUnregisterRelationshipCounterResponse) => void): grpc.ClientUnaryCall;
    experimentalUnregisterRelationshipCounter(input: ExperimentalUnregisterRelationshipCounterRequest, callback: (err: grpc.ServiceError | null, value?: ExperimentalUnregisterRelationshipCounterResponse) => void): grpc.ClientUnaryCall;
}
/**
 * ExperimentalService exposes a number of APIs that are currently being
 * prototyped and tested for future inclusion in the stable API.
 *
 * @generated from protobuf service authzed.api.v1.ExperimentalService
 */
export class ExperimentalServiceClient extends grpc.Client implements IExperimentalServiceClient {
    private readonly _binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions>;
    constructor(address: string, credentials: grpc.ChannelCredentials, options: grpc.ClientOptions = {}, binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions> = {}) {
        super(address, credentials, options);
        this._binaryOptions = binaryOptions;
    }
    /**
     * DEPRECATED: Promoted to ImportBulkRelationships in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: BulkImportRelationships(stream authzed.api.v1.BulkImportRelationshipsRequest) returns (authzed.api.v1.BulkImportRelationshipsResponse);
     */
    bulkImportRelationships(metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: BulkImportRelationshipsResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: BulkImportRelationshipsResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: BulkImportRelationshipsResponse) => void)): grpc.ClientWritableStream<BulkImportRelationshipsRequest> {
        const method = ExperimentalService.methods[0];
        return this.makeClientStreamRequest<BulkImportRelationshipsRequest, BulkImportRelationshipsResponse>(`/${ExperimentalService.typeName}/${method.name}`, (value: BulkImportRelationshipsRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): BulkImportRelationshipsResponse => method.O.fromBinary(value, this._binaryOptions), (metadata as any), (options as any), (callback as any));
    }
    /**
     * DEPRECATED: Promoted to ExportBulkRelationships in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: BulkExportRelationships(authzed.api.v1.BulkExportRelationshipsRequest) returns (stream authzed.api.v1.BulkExportRelationshipsResponse);
     */
    bulkExportRelationships(input: BulkExportRelationshipsRequest, metadata?: grpc.Metadata | grpc.CallOptions, options?: grpc.CallOptions): grpc.ClientReadableStream<BulkExportRelationshipsResponse> {
        const method = ExperimentalService.methods[1];
        return this.makeServerStreamRequest<BulkExportRelationshipsRequest, BulkExportRelationshipsResponse>(`/${ExperimentalService.typeName}/${method.name}`, (value: BulkExportRelationshipsRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): BulkExportRelationshipsResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), options);
    }
    /**
     * DEPRECATED: Promoted to CheckBulkPermission in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: BulkCheckPermission(authzed.api.v1.BulkCheckPermissionRequest) returns (authzed.api.v1.BulkCheckPermissionResponse);
     */
    bulkCheckPermission(input: BulkCheckPermissionRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: BulkCheckPermissionResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: BulkCheckPermissionResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: BulkCheckPermissionResponse) => void)): grpc.ClientUnaryCall {
        const method = ExperimentalService.methods[2];
        return this.makeUnaryRequest<BulkCheckPermissionRequest, BulkCheckPermissionResponse>(`/${ExperimentalService.typeName}/${method.name}`, (value: BulkCheckPermissionRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): BulkCheckPermissionResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * DEPRECATED: Promoted to ReflectSchema in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: ExperimentalReflectSchema(authzed.api.v1.ExperimentalReflectSchemaRequest) returns (authzed.api.v1.ExperimentalReflectSchemaResponse);
     */
    experimentalReflectSchema(input: ExperimentalReflectSchemaRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalReflectSchemaResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalReflectSchemaResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: ExperimentalReflectSchemaResponse) => void)): grpc.ClientUnaryCall {
        const method = ExperimentalService.methods[3];
        return this.makeUnaryRequest<ExperimentalReflectSchemaRequest, ExperimentalReflectSchemaResponse>(`/${ExperimentalService.typeName}/${method.name}`, (value: ExperimentalReflectSchemaRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): ExperimentalReflectSchemaResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * DEPRECATED: Promoted to ComputablePermissions in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: ExperimentalComputablePermissions(authzed.api.v1.ExperimentalComputablePermissionsRequest) returns (authzed.api.v1.ExperimentalComputablePermissionsResponse);
     */
    experimentalComputablePermissions(input: ExperimentalComputablePermissionsRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalComputablePermissionsResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalComputablePermissionsResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: ExperimentalComputablePermissionsResponse) => void)): grpc.ClientUnaryCall {
        const method = ExperimentalService.methods[4];
        return this.makeUnaryRequest<ExperimentalComputablePermissionsRequest, ExperimentalComputablePermissionsResponse>(`/${ExperimentalService.typeName}/${method.name}`, (value: ExperimentalComputablePermissionsRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): ExperimentalComputablePermissionsResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * DEPRECATED: Promoted to DependentRelations in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: ExperimentalDependentRelations(authzed.api.v1.ExperimentalDependentRelationsRequest) returns (authzed.api.v1.ExperimentalDependentRelationsResponse);
     */
    experimentalDependentRelations(input: ExperimentalDependentRelationsRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalDependentRelationsResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalDependentRelationsResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: ExperimentalDependentRelationsResponse) => void)): grpc.ClientUnaryCall {
        const method = ExperimentalService.methods[5];
        return this.makeUnaryRequest<ExperimentalDependentRelationsRequest, ExperimentalDependentRelationsResponse>(`/${ExperimentalService.typeName}/${method.name}`, (value: ExperimentalDependentRelationsRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): ExperimentalDependentRelationsResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * DEPRECATED: Promoted to DiffSchema in the stable API.
     *
     * @deprecated
     * @generated from protobuf rpc: ExperimentalDiffSchema(authzed.api.v1.ExperimentalDiffSchemaRequest) returns (authzed.api.v1.ExperimentalDiffSchemaResponse);
     */
    experimentalDiffSchema(input: ExperimentalDiffSchemaRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalDiffSchemaResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalDiffSchemaResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: ExperimentalDiffSchemaResponse) => void)): grpc.ClientUnaryCall {
        const method = ExperimentalService.methods[6];
        return this.makeUnaryRequest<ExperimentalDiffSchemaRequest, ExperimentalDiffSchemaResponse>(`/${ExperimentalService.typeName}/${method.name}`, (value: ExperimentalDiffSchemaRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): ExperimentalDiffSchemaResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * EXPERIMENTAL: RegisterRelationshipCounter registers a new filter for counting relationships. A filter must be registered before
     * a count can be requested.
     *
     * @generated from protobuf rpc: ExperimentalRegisterRelationshipCounter(authzed.api.v1.ExperimentalRegisterRelationshipCounterRequest) returns (authzed.api.v1.ExperimentalRegisterRelationshipCounterResponse);
     */
    experimentalRegisterRelationshipCounter(input: ExperimentalRegisterRelationshipCounterRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalRegisterRelationshipCounterResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalRegisterRelationshipCounterResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: ExperimentalRegisterRelationshipCounterResponse) => void)): grpc.ClientUnaryCall {
        const method = ExperimentalService.methods[7];
        return this.makeUnaryRequest<ExperimentalRegisterRelationshipCounterRequest, ExperimentalRegisterRelationshipCounterResponse>(`/${ExperimentalService.typeName}/${method.name}`, (value: ExperimentalRegisterRelationshipCounterRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): ExperimentalRegisterRelationshipCounterResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * EXPERIMENTAL: CountRelationships returns the count of relationships for *pre-registered* filter.
     *
     * @generated from protobuf rpc: ExperimentalCountRelationships(authzed.api.v1.ExperimentalCountRelationshipsRequest) returns (authzed.api.v1.ExperimentalCountRelationshipsResponse);
     */
    experimentalCountRelationships(input: ExperimentalCountRelationshipsRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalCountRelationshipsResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalCountRelationshipsResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: ExperimentalCountRelationshipsResponse) => void)): grpc.ClientUnaryCall {
        const method = ExperimentalService.methods[8];
        return this.makeUnaryRequest<ExperimentalCountRelationshipsRequest, ExperimentalCountRelationshipsResponse>(`/${ExperimentalService.typeName}/${method.name}`, (value: ExperimentalCountRelationshipsRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): ExperimentalCountRelationshipsResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * EXPERIMENTAL: UnregisterRelationshipCounter unregisters an existing filter for counting relationships.
     *
     * @generated from protobuf rpc: ExperimentalUnregisterRelationshipCounter(authzed.api.v1.ExperimentalUnregisterRelationshipCounterRequest) returns (authzed.api.v1.ExperimentalUnregisterRelationshipCounterResponse);
     */
    experimentalUnregisterRelationshipCounter(input: ExperimentalUnregisterRelationshipCounterRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalUnregisterRelationshipCounterResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ExperimentalUnregisterRelationshipCounterResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: ExperimentalUnregisterRelationshipCounterResponse) => void)): grpc.ClientUnaryCall {
        const method = ExperimentalService.methods[9];
        return this.makeUnaryRequest<ExperimentalUnregisterRelationshipCounterRequest, ExperimentalUnregisterRelationshipCounterResponse>(`/${ExperimentalService.typeName}/${method.name}`, (value: ExperimentalUnregisterRelationshipCounterRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): ExperimentalUnregisterRelationshipCounterResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
}
