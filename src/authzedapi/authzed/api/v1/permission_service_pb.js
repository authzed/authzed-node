// source: authzed/api/v1/permission_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var validate_validate_pb = require('../../../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var authzed_api_v1_core_pb = require('../../../authzed/api/v1/core_pb.js');
goog.object.extend(proto, authzed_api_v1_core_pb);
goog.exportSymbol('proto.authzed.api.v1.CheckPermissionRequest', null, global);
goog.exportSymbol('proto.authzed.api.v1.CheckPermissionResponse', null, global);
goog.exportSymbol('proto.authzed.api.v1.CheckPermissionResponse.Permissionship', null, global);
goog.exportSymbol('proto.authzed.api.v1.Consistency', null, global);
goog.exportSymbol('proto.authzed.api.v1.Consistency.RequirementCase', null, global);
goog.exportSymbol('proto.authzed.api.v1.DeleteRelationshipsRequest', null, global);
goog.exportSymbol('proto.authzed.api.v1.DeleteRelationshipsResponse', null, global);
goog.exportSymbol('proto.authzed.api.v1.ExpandPermissionTreeRequest', null, global);
goog.exportSymbol('proto.authzed.api.v1.ExpandPermissionTreeResponse', null, global);
goog.exportSymbol('proto.authzed.api.v1.LookupResourcesRequest', null, global);
goog.exportSymbol('proto.authzed.api.v1.LookupResourcesResponse', null, global);
goog.exportSymbol('proto.authzed.api.v1.Precondition', null, global);
goog.exportSymbol('proto.authzed.api.v1.Precondition.Operation', null, global);
goog.exportSymbol('proto.authzed.api.v1.ReadRelationshipsRequest', null, global);
goog.exportSymbol('proto.authzed.api.v1.ReadRelationshipsResponse', null, global);
goog.exportSymbol('proto.authzed.api.v1.RelationshipFilter', null, global);
goog.exportSymbol('proto.authzed.api.v1.SubjectFilter', null, global);
goog.exportSymbol('proto.authzed.api.v1.SubjectFilter.RelationFilter', null, global);
goog.exportSymbol('proto.authzed.api.v1.WriteRelationshipsRequest', null, global);
goog.exportSymbol('proto.authzed.api.v1.WriteRelationshipsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.Consistency = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.authzed.api.v1.Consistency.oneofGroups_);
};
goog.inherits(proto.authzed.api.v1.Consistency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.Consistency.displayName = 'proto.authzed.api.v1.Consistency';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.RelationshipFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.RelationshipFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.RelationshipFilter.displayName = 'proto.authzed.api.v1.RelationshipFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.SubjectFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.SubjectFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.SubjectFilter.displayName = 'proto.authzed.api.v1.SubjectFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.SubjectFilter.RelationFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.SubjectFilter.RelationFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.SubjectFilter.RelationFilter.displayName = 'proto.authzed.api.v1.SubjectFilter.RelationFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.ReadRelationshipsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.ReadRelationshipsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.ReadRelationshipsRequest.displayName = 'proto.authzed.api.v1.ReadRelationshipsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.ReadRelationshipsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.ReadRelationshipsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.ReadRelationshipsResponse.displayName = 'proto.authzed.api.v1.ReadRelationshipsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.Precondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.Precondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.Precondition.displayName = 'proto.authzed.api.v1.Precondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.WriteRelationshipsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.authzed.api.v1.WriteRelationshipsRequest.repeatedFields_, null);
};
goog.inherits(proto.authzed.api.v1.WriteRelationshipsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.WriteRelationshipsRequest.displayName = 'proto.authzed.api.v1.WriteRelationshipsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.WriteRelationshipsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.WriteRelationshipsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.WriteRelationshipsResponse.displayName = 'proto.authzed.api.v1.WriteRelationshipsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.DeleteRelationshipsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.authzed.api.v1.DeleteRelationshipsRequest.repeatedFields_, null);
};
goog.inherits(proto.authzed.api.v1.DeleteRelationshipsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.DeleteRelationshipsRequest.displayName = 'proto.authzed.api.v1.DeleteRelationshipsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.DeleteRelationshipsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.DeleteRelationshipsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.DeleteRelationshipsResponse.displayName = 'proto.authzed.api.v1.DeleteRelationshipsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.CheckPermissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.CheckPermissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.CheckPermissionRequest.displayName = 'proto.authzed.api.v1.CheckPermissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.CheckPermissionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.CheckPermissionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.CheckPermissionResponse.displayName = 'proto.authzed.api.v1.CheckPermissionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.ExpandPermissionTreeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.ExpandPermissionTreeRequest.displayName = 'proto.authzed.api.v1.ExpandPermissionTreeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.ExpandPermissionTreeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.ExpandPermissionTreeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.ExpandPermissionTreeResponse.displayName = 'proto.authzed.api.v1.ExpandPermissionTreeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.LookupResourcesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.LookupResourcesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.LookupResourcesRequest.displayName = 'proto.authzed.api.v1.LookupResourcesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.authzed.api.v1.LookupResourcesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.authzed.api.v1.LookupResourcesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.authzed.api.v1.LookupResourcesResponse.displayName = 'proto.authzed.api.v1.LookupResourcesResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.authzed.api.v1.Consistency.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.authzed.api.v1.Consistency.RequirementCase = {
  REQUIREMENT_NOT_SET: 0,
  MINIMIZE_LATENCY: 1,
  AT_LEAST_AS_FRESH: 2,
  AT_EXACT_SNAPSHOT: 3,
  FULLY_CONSISTENT: 4
};

/**
 * @return {proto.authzed.api.v1.Consistency.RequirementCase}
 */
proto.authzed.api.v1.Consistency.prototype.getRequirementCase = function() {
  return /** @type {proto.authzed.api.v1.Consistency.RequirementCase} */(jspb.Message.computeOneofCase(this, proto.authzed.api.v1.Consistency.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.Consistency.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.Consistency.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.Consistency} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.Consistency.toObject = function(includeInstance, msg) {
  var f, obj = {
    minimizeLatency: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    atLeastAsFresh: (f = msg.getAtLeastAsFresh()) && authzed_api_v1_core_pb.ZedToken.toObject(includeInstance, f),
    atExactSnapshot: (f = msg.getAtExactSnapshot()) && authzed_api_v1_core_pb.ZedToken.toObject(includeInstance, f),
    fullyConsistent: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.Consistency}
 */
proto.authzed.api.v1.Consistency.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.Consistency;
  return proto.authzed.api.v1.Consistency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.Consistency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.Consistency}
 */
proto.authzed.api.v1.Consistency.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMinimizeLatency(value);
      break;
    case 2:
      var value = new authzed_api_v1_core_pb.ZedToken;
      reader.readMessage(value,authzed_api_v1_core_pb.ZedToken.deserializeBinaryFromReader);
      msg.setAtLeastAsFresh(value);
      break;
    case 3:
      var value = new authzed_api_v1_core_pb.ZedToken;
      reader.readMessage(value,authzed_api_v1_core_pb.ZedToken.deserializeBinaryFromReader);
      msg.setAtExactSnapshot(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullyConsistent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.Consistency.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.Consistency.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.Consistency} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.Consistency.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAtLeastAsFresh();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      authzed_api_v1_core_pb.ZedToken.serializeBinaryToWriter
    );
  }
  f = message.getAtExactSnapshot();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      authzed_api_v1_core_pb.ZedToken.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bool minimize_latency = 1;
 * @return {boolean}
 */
proto.authzed.api.v1.Consistency.prototype.getMinimizeLatency = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.authzed.api.v1.Consistency} returns this
 */
proto.authzed.api.v1.Consistency.prototype.setMinimizeLatency = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.authzed.api.v1.Consistency.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.authzed.api.v1.Consistency} returns this
 */
proto.authzed.api.v1.Consistency.prototype.clearMinimizeLatency = function() {
  return jspb.Message.setOneofField(this, 1, proto.authzed.api.v1.Consistency.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.Consistency.prototype.hasMinimizeLatency = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ZedToken at_least_as_fresh = 2;
 * @return {?proto.authzed.api.v1.ZedToken}
 */
proto.authzed.api.v1.Consistency.prototype.getAtLeastAsFresh = function() {
  return /** @type{?proto.authzed.api.v1.ZedToken} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.ZedToken, 2));
};


/**
 * @param {?proto.authzed.api.v1.ZedToken|undefined} value
 * @return {!proto.authzed.api.v1.Consistency} returns this
*/
proto.authzed.api.v1.Consistency.prototype.setAtLeastAsFresh = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.authzed.api.v1.Consistency.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.Consistency} returns this
 */
proto.authzed.api.v1.Consistency.prototype.clearAtLeastAsFresh = function() {
  return this.setAtLeastAsFresh(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.Consistency.prototype.hasAtLeastAsFresh = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ZedToken at_exact_snapshot = 3;
 * @return {?proto.authzed.api.v1.ZedToken}
 */
proto.authzed.api.v1.Consistency.prototype.getAtExactSnapshot = function() {
  return /** @type{?proto.authzed.api.v1.ZedToken} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.ZedToken, 3));
};


/**
 * @param {?proto.authzed.api.v1.ZedToken|undefined} value
 * @return {!proto.authzed.api.v1.Consistency} returns this
*/
proto.authzed.api.v1.Consistency.prototype.setAtExactSnapshot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.authzed.api.v1.Consistency.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.Consistency} returns this
 */
proto.authzed.api.v1.Consistency.prototype.clearAtExactSnapshot = function() {
  return this.setAtExactSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.Consistency.prototype.hasAtExactSnapshot = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool fully_consistent = 4;
 * @return {boolean}
 */
proto.authzed.api.v1.Consistency.prototype.getFullyConsistent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.authzed.api.v1.Consistency} returns this
 */
proto.authzed.api.v1.Consistency.prototype.setFullyConsistent = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.authzed.api.v1.Consistency.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.authzed.api.v1.Consistency} returns this
 */
proto.authzed.api.v1.Consistency.prototype.clearFullyConsistent = function() {
  return jspb.Message.setOneofField(this, 4, proto.authzed.api.v1.Consistency.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.Consistency.prototype.hasFullyConsistent = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.RelationshipFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.RelationshipFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.RelationshipFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.RelationshipFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    optionalResourceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    optionalRelation: jspb.Message.getFieldWithDefault(msg, 3, ""),
    optionalSubjectFilter: (f = msg.getOptionalSubjectFilter()) && proto.authzed.api.v1.SubjectFilter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.RelationshipFilter}
 */
proto.authzed.api.v1.RelationshipFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.RelationshipFilter;
  return proto.authzed.api.v1.RelationshipFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.RelationshipFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.RelationshipFilter}
 */
proto.authzed.api.v1.RelationshipFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalResourceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalRelation(value);
      break;
    case 4:
      var value = new proto.authzed.api.v1.SubjectFilter;
      reader.readMessage(value,proto.authzed.api.v1.SubjectFilter.deserializeBinaryFromReader);
      msg.setOptionalSubjectFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.RelationshipFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.RelationshipFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.RelationshipFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.RelationshipFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptionalResourceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptionalRelation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOptionalSubjectFilter();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.authzed.api.v1.SubjectFilter.serializeBinaryToWriter
    );
  }
};


/**
 * optional string resource_type = 1;
 * @return {string}
 */
proto.authzed.api.v1.RelationshipFilter.prototype.getResourceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.RelationshipFilter} returns this
 */
proto.authzed.api.v1.RelationshipFilter.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string optional_resource_id = 2;
 * @return {string}
 */
proto.authzed.api.v1.RelationshipFilter.prototype.getOptionalResourceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.RelationshipFilter} returns this
 */
proto.authzed.api.v1.RelationshipFilter.prototype.setOptionalResourceId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string optional_relation = 3;
 * @return {string}
 */
proto.authzed.api.v1.RelationshipFilter.prototype.getOptionalRelation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.RelationshipFilter} returns this
 */
proto.authzed.api.v1.RelationshipFilter.prototype.setOptionalRelation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional SubjectFilter optional_subject_filter = 4;
 * @return {?proto.authzed.api.v1.SubjectFilter}
 */
proto.authzed.api.v1.RelationshipFilter.prototype.getOptionalSubjectFilter = function() {
  return /** @type{?proto.authzed.api.v1.SubjectFilter} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.SubjectFilter, 4));
};


/**
 * @param {?proto.authzed.api.v1.SubjectFilter|undefined} value
 * @return {!proto.authzed.api.v1.RelationshipFilter} returns this
*/
proto.authzed.api.v1.RelationshipFilter.prototype.setOptionalSubjectFilter = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.RelationshipFilter} returns this
 */
proto.authzed.api.v1.RelationshipFilter.prototype.clearOptionalSubjectFilter = function() {
  return this.setOptionalSubjectFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.RelationshipFilter.prototype.hasOptionalSubjectFilter = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.SubjectFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.SubjectFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.SubjectFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.SubjectFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    subjectType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    optionalSubjectId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    optionalRelation: (f = msg.getOptionalRelation()) && proto.authzed.api.v1.SubjectFilter.RelationFilter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.SubjectFilter}
 */
proto.authzed.api.v1.SubjectFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.SubjectFilter;
  return proto.authzed.api.v1.SubjectFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.SubjectFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.SubjectFilter}
 */
proto.authzed.api.v1.SubjectFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubjectType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalSubjectId(value);
      break;
    case 3:
      var value = new proto.authzed.api.v1.SubjectFilter.RelationFilter;
      reader.readMessage(value,proto.authzed.api.v1.SubjectFilter.RelationFilter.deserializeBinaryFromReader);
      msg.setOptionalRelation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.SubjectFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.SubjectFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.SubjectFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.SubjectFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubjectType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptionalSubjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptionalRelation();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.authzed.api.v1.SubjectFilter.RelationFilter.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.SubjectFilter.RelationFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.SubjectFilter.RelationFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.SubjectFilter.RelationFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.SubjectFilter.RelationFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    relation: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.SubjectFilter.RelationFilter}
 */
proto.authzed.api.v1.SubjectFilter.RelationFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.SubjectFilter.RelationFilter;
  return proto.authzed.api.v1.SubjectFilter.RelationFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.SubjectFilter.RelationFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.SubjectFilter.RelationFilter}
 */
proto.authzed.api.v1.SubjectFilter.RelationFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.SubjectFilter.RelationFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.SubjectFilter.RelationFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.SubjectFilter.RelationFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.SubjectFilter.RelationFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelation();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string relation = 1;
 * @return {string}
 */
proto.authzed.api.v1.SubjectFilter.RelationFilter.prototype.getRelation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.SubjectFilter.RelationFilter} returns this
 */
proto.authzed.api.v1.SubjectFilter.RelationFilter.prototype.setRelation = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subject_type = 1;
 * @return {string}
 */
proto.authzed.api.v1.SubjectFilter.prototype.getSubjectType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.SubjectFilter} returns this
 */
proto.authzed.api.v1.SubjectFilter.prototype.setSubjectType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string optional_subject_id = 2;
 * @return {string}
 */
proto.authzed.api.v1.SubjectFilter.prototype.getOptionalSubjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.SubjectFilter} returns this
 */
proto.authzed.api.v1.SubjectFilter.prototype.setOptionalSubjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional RelationFilter optional_relation = 3;
 * @return {?proto.authzed.api.v1.SubjectFilter.RelationFilter}
 */
proto.authzed.api.v1.SubjectFilter.prototype.getOptionalRelation = function() {
  return /** @type{?proto.authzed.api.v1.SubjectFilter.RelationFilter} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.SubjectFilter.RelationFilter, 3));
};


/**
 * @param {?proto.authzed.api.v1.SubjectFilter.RelationFilter|undefined} value
 * @return {!proto.authzed.api.v1.SubjectFilter} returns this
*/
proto.authzed.api.v1.SubjectFilter.prototype.setOptionalRelation = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.SubjectFilter} returns this
 */
proto.authzed.api.v1.SubjectFilter.prototype.clearOptionalRelation = function() {
  return this.setOptionalRelation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.SubjectFilter.prototype.hasOptionalRelation = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.ReadRelationshipsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.ReadRelationshipsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.ReadRelationshipsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.ReadRelationshipsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    consistency: (f = msg.getConsistency()) && proto.authzed.api.v1.Consistency.toObject(includeInstance, f),
    relationshipFilter: (f = msg.getRelationshipFilter()) && proto.authzed.api.v1.RelationshipFilter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.ReadRelationshipsRequest}
 */
proto.authzed.api.v1.ReadRelationshipsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.ReadRelationshipsRequest;
  return proto.authzed.api.v1.ReadRelationshipsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.ReadRelationshipsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.ReadRelationshipsRequest}
 */
proto.authzed.api.v1.ReadRelationshipsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authzed.api.v1.Consistency;
      reader.readMessage(value,proto.authzed.api.v1.Consistency.deserializeBinaryFromReader);
      msg.setConsistency(value);
      break;
    case 2:
      var value = new proto.authzed.api.v1.RelationshipFilter;
      reader.readMessage(value,proto.authzed.api.v1.RelationshipFilter.deserializeBinaryFromReader);
      msg.setRelationshipFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.ReadRelationshipsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.ReadRelationshipsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.ReadRelationshipsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.ReadRelationshipsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsistency();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.authzed.api.v1.Consistency.serializeBinaryToWriter
    );
  }
  f = message.getRelationshipFilter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.authzed.api.v1.RelationshipFilter.serializeBinaryToWriter
    );
  }
};


/**
 * optional Consistency consistency = 1;
 * @return {?proto.authzed.api.v1.Consistency}
 */
proto.authzed.api.v1.ReadRelationshipsRequest.prototype.getConsistency = function() {
  return /** @type{?proto.authzed.api.v1.Consistency} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.Consistency, 1));
};


/**
 * @param {?proto.authzed.api.v1.Consistency|undefined} value
 * @return {!proto.authzed.api.v1.ReadRelationshipsRequest} returns this
*/
proto.authzed.api.v1.ReadRelationshipsRequest.prototype.setConsistency = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.ReadRelationshipsRequest} returns this
 */
proto.authzed.api.v1.ReadRelationshipsRequest.prototype.clearConsistency = function() {
  return this.setConsistency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.ReadRelationshipsRequest.prototype.hasConsistency = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RelationshipFilter relationship_filter = 2;
 * @return {?proto.authzed.api.v1.RelationshipFilter}
 */
proto.authzed.api.v1.ReadRelationshipsRequest.prototype.getRelationshipFilter = function() {
  return /** @type{?proto.authzed.api.v1.RelationshipFilter} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.RelationshipFilter, 2));
};


/**
 * @param {?proto.authzed.api.v1.RelationshipFilter|undefined} value
 * @return {!proto.authzed.api.v1.ReadRelationshipsRequest} returns this
*/
proto.authzed.api.v1.ReadRelationshipsRequest.prototype.setRelationshipFilter = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.ReadRelationshipsRequest} returns this
 */
proto.authzed.api.v1.ReadRelationshipsRequest.prototype.clearRelationshipFilter = function() {
  return this.setRelationshipFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.ReadRelationshipsRequest.prototype.hasRelationshipFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.ReadRelationshipsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.ReadRelationshipsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.ReadRelationshipsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.ReadRelationshipsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    readAt: (f = msg.getReadAt()) && authzed_api_v1_core_pb.ZedToken.toObject(includeInstance, f),
    relationship: (f = msg.getRelationship()) && authzed_api_v1_core_pb.Relationship.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.ReadRelationshipsResponse}
 */
proto.authzed.api.v1.ReadRelationshipsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.ReadRelationshipsResponse;
  return proto.authzed.api.v1.ReadRelationshipsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.ReadRelationshipsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.ReadRelationshipsResponse}
 */
proto.authzed.api.v1.ReadRelationshipsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v1_core_pb.ZedToken;
      reader.readMessage(value,authzed_api_v1_core_pb.ZedToken.deserializeBinaryFromReader);
      msg.setReadAt(value);
      break;
    case 2:
      var value = new authzed_api_v1_core_pb.Relationship;
      reader.readMessage(value,authzed_api_v1_core_pb.Relationship.deserializeBinaryFromReader);
      msg.setRelationship(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.ReadRelationshipsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.ReadRelationshipsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.ReadRelationshipsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.ReadRelationshipsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReadAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      authzed_api_v1_core_pb.ZedToken.serializeBinaryToWriter
    );
  }
  f = message.getRelationship();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      authzed_api_v1_core_pb.Relationship.serializeBinaryToWriter
    );
  }
};


/**
 * optional ZedToken read_at = 1;
 * @return {?proto.authzed.api.v1.ZedToken}
 */
proto.authzed.api.v1.ReadRelationshipsResponse.prototype.getReadAt = function() {
  return /** @type{?proto.authzed.api.v1.ZedToken} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.ZedToken, 1));
};


/**
 * @param {?proto.authzed.api.v1.ZedToken|undefined} value
 * @return {!proto.authzed.api.v1.ReadRelationshipsResponse} returns this
*/
proto.authzed.api.v1.ReadRelationshipsResponse.prototype.setReadAt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.ReadRelationshipsResponse} returns this
 */
proto.authzed.api.v1.ReadRelationshipsResponse.prototype.clearReadAt = function() {
  return this.setReadAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.ReadRelationshipsResponse.prototype.hasReadAt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Relationship relationship = 2;
 * @return {?proto.authzed.api.v1.Relationship}
 */
proto.authzed.api.v1.ReadRelationshipsResponse.prototype.getRelationship = function() {
  return /** @type{?proto.authzed.api.v1.Relationship} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.Relationship, 2));
};


/**
 * @param {?proto.authzed.api.v1.Relationship|undefined} value
 * @return {!proto.authzed.api.v1.ReadRelationshipsResponse} returns this
*/
proto.authzed.api.v1.ReadRelationshipsResponse.prototype.setRelationship = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.ReadRelationshipsResponse} returns this
 */
proto.authzed.api.v1.ReadRelationshipsResponse.prototype.clearRelationship = function() {
  return this.setRelationship(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.ReadRelationshipsResponse.prototype.hasRelationship = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.Precondition.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.Precondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.Precondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.Precondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    operation: jspb.Message.getFieldWithDefault(msg, 1, 0),
    filter: (f = msg.getFilter()) && proto.authzed.api.v1.RelationshipFilter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.Precondition}
 */
proto.authzed.api.v1.Precondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.Precondition;
  return proto.authzed.api.v1.Precondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.Precondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.Precondition}
 */
proto.authzed.api.v1.Precondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.authzed.api.v1.Precondition.Operation} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    case 2:
      var value = new proto.authzed.api.v1.RelationshipFilter;
      reader.readMessage(value,proto.authzed.api.v1.RelationshipFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.Precondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.Precondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.Precondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.Precondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.authzed.api.v1.RelationshipFilter.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.authzed.api.v1.Precondition.Operation = {
  OPERATION_UNSPECIFIED: 0,
  OPERATION_MUST_NOT_MATCH: 1,
  OPERATION_MUST_MATCH: 2
};

/**
 * optional Operation operation = 1;
 * @return {!proto.authzed.api.v1.Precondition.Operation}
 */
proto.authzed.api.v1.Precondition.prototype.getOperation = function() {
  return /** @type {!proto.authzed.api.v1.Precondition.Operation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.authzed.api.v1.Precondition.Operation} value
 * @return {!proto.authzed.api.v1.Precondition} returns this
 */
proto.authzed.api.v1.Precondition.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional RelationshipFilter filter = 2;
 * @return {?proto.authzed.api.v1.RelationshipFilter}
 */
proto.authzed.api.v1.Precondition.prototype.getFilter = function() {
  return /** @type{?proto.authzed.api.v1.RelationshipFilter} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.RelationshipFilter, 2));
};


/**
 * @param {?proto.authzed.api.v1.RelationshipFilter|undefined} value
 * @return {!proto.authzed.api.v1.Precondition} returns this
*/
proto.authzed.api.v1.Precondition.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.Precondition} returns this
 */
proto.authzed.api.v1.Precondition.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.Precondition.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.authzed.api.v1.WriteRelationshipsRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.WriteRelationshipsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.WriteRelationshipsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.WriteRelationshipsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.WriteRelationshipsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    updatesList: jspb.Message.toObjectList(msg.getUpdatesList(),
    authzed_api_v1_core_pb.RelationshipUpdate.toObject, includeInstance),
    optionalPreconditionsList: jspb.Message.toObjectList(msg.getOptionalPreconditionsList(),
    proto.authzed.api.v1.Precondition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.WriteRelationshipsRequest}
 */
proto.authzed.api.v1.WriteRelationshipsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.WriteRelationshipsRequest;
  return proto.authzed.api.v1.WriteRelationshipsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.WriteRelationshipsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.WriteRelationshipsRequest}
 */
proto.authzed.api.v1.WriteRelationshipsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v1_core_pb.RelationshipUpdate;
      reader.readMessage(value,authzed_api_v1_core_pb.RelationshipUpdate.deserializeBinaryFromReader);
      msg.addUpdates(value);
      break;
    case 2:
      var value = new proto.authzed.api.v1.Precondition;
      reader.readMessage(value,proto.authzed.api.v1.Precondition.deserializeBinaryFromReader);
      msg.addOptionalPreconditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.WriteRelationshipsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.WriteRelationshipsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.WriteRelationshipsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.WriteRelationshipsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      authzed_api_v1_core_pb.RelationshipUpdate.serializeBinaryToWriter
    );
  }
  f = message.getOptionalPreconditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.authzed.api.v1.Precondition.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RelationshipUpdate updates = 1;
 * @return {!Array<!proto.authzed.api.v1.RelationshipUpdate>}
 */
proto.authzed.api.v1.WriteRelationshipsRequest.prototype.getUpdatesList = function() {
  return /** @type{!Array<!proto.authzed.api.v1.RelationshipUpdate>} */ (
    jspb.Message.getRepeatedWrapperField(this, authzed_api_v1_core_pb.RelationshipUpdate, 1));
};


/**
 * @param {!Array<!proto.authzed.api.v1.RelationshipUpdate>} value
 * @return {!proto.authzed.api.v1.WriteRelationshipsRequest} returns this
*/
proto.authzed.api.v1.WriteRelationshipsRequest.prototype.setUpdatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.authzed.api.v1.RelationshipUpdate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.authzed.api.v1.RelationshipUpdate}
 */
proto.authzed.api.v1.WriteRelationshipsRequest.prototype.addUpdates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.authzed.api.v1.RelationshipUpdate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authzed.api.v1.WriteRelationshipsRequest} returns this
 */
proto.authzed.api.v1.WriteRelationshipsRequest.prototype.clearUpdatesList = function() {
  return this.setUpdatesList([]);
};


/**
 * repeated Precondition optional_preconditions = 2;
 * @return {!Array<!proto.authzed.api.v1.Precondition>}
 */
proto.authzed.api.v1.WriteRelationshipsRequest.prototype.getOptionalPreconditionsList = function() {
  return /** @type{!Array<!proto.authzed.api.v1.Precondition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.authzed.api.v1.Precondition, 2));
};


/**
 * @param {!Array<!proto.authzed.api.v1.Precondition>} value
 * @return {!proto.authzed.api.v1.WriteRelationshipsRequest} returns this
*/
proto.authzed.api.v1.WriteRelationshipsRequest.prototype.setOptionalPreconditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.authzed.api.v1.Precondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.authzed.api.v1.Precondition}
 */
proto.authzed.api.v1.WriteRelationshipsRequest.prototype.addOptionalPreconditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.authzed.api.v1.Precondition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authzed.api.v1.WriteRelationshipsRequest} returns this
 */
proto.authzed.api.v1.WriteRelationshipsRequest.prototype.clearOptionalPreconditionsList = function() {
  return this.setOptionalPreconditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.WriteRelationshipsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.WriteRelationshipsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.WriteRelationshipsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.WriteRelationshipsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    writtenAt: (f = msg.getWrittenAt()) && authzed_api_v1_core_pb.ZedToken.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.WriteRelationshipsResponse}
 */
proto.authzed.api.v1.WriteRelationshipsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.WriteRelationshipsResponse;
  return proto.authzed.api.v1.WriteRelationshipsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.WriteRelationshipsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.WriteRelationshipsResponse}
 */
proto.authzed.api.v1.WriteRelationshipsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v1_core_pb.ZedToken;
      reader.readMessage(value,authzed_api_v1_core_pb.ZedToken.deserializeBinaryFromReader);
      msg.setWrittenAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.WriteRelationshipsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.WriteRelationshipsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.WriteRelationshipsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.WriteRelationshipsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWrittenAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      authzed_api_v1_core_pb.ZedToken.serializeBinaryToWriter
    );
  }
};


/**
 * optional ZedToken written_at = 1;
 * @return {?proto.authzed.api.v1.ZedToken}
 */
proto.authzed.api.v1.WriteRelationshipsResponse.prototype.getWrittenAt = function() {
  return /** @type{?proto.authzed.api.v1.ZedToken} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.ZedToken, 1));
};


/**
 * @param {?proto.authzed.api.v1.ZedToken|undefined} value
 * @return {!proto.authzed.api.v1.WriteRelationshipsResponse} returns this
*/
proto.authzed.api.v1.WriteRelationshipsResponse.prototype.setWrittenAt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.WriteRelationshipsResponse} returns this
 */
proto.authzed.api.v1.WriteRelationshipsResponse.prototype.clearWrittenAt = function() {
  return this.setWrittenAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.WriteRelationshipsResponse.prototype.hasWrittenAt = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.authzed.api.v1.DeleteRelationshipsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.DeleteRelationshipsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.DeleteRelationshipsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.DeleteRelationshipsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.DeleteRelationshipsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    relationshipFilter: (f = msg.getRelationshipFilter()) && proto.authzed.api.v1.RelationshipFilter.toObject(includeInstance, f),
    optionalPreconditionsList: jspb.Message.toObjectList(msg.getOptionalPreconditionsList(),
    proto.authzed.api.v1.Precondition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.DeleteRelationshipsRequest}
 */
proto.authzed.api.v1.DeleteRelationshipsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.DeleteRelationshipsRequest;
  return proto.authzed.api.v1.DeleteRelationshipsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.DeleteRelationshipsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.DeleteRelationshipsRequest}
 */
proto.authzed.api.v1.DeleteRelationshipsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authzed.api.v1.RelationshipFilter;
      reader.readMessage(value,proto.authzed.api.v1.RelationshipFilter.deserializeBinaryFromReader);
      msg.setRelationshipFilter(value);
      break;
    case 2:
      var value = new proto.authzed.api.v1.Precondition;
      reader.readMessage(value,proto.authzed.api.v1.Precondition.deserializeBinaryFromReader);
      msg.addOptionalPreconditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.DeleteRelationshipsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.DeleteRelationshipsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.DeleteRelationshipsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.DeleteRelationshipsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelationshipFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.authzed.api.v1.RelationshipFilter.serializeBinaryToWriter
    );
  }
  f = message.getOptionalPreconditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.authzed.api.v1.Precondition.serializeBinaryToWriter
    );
  }
};


/**
 * optional RelationshipFilter relationship_filter = 1;
 * @return {?proto.authzed.api.v1.RelationshipFilter}
 */
proto.authzed.api.v1.DeleteRelationshipsRequest.prototype.getRelationshipFilter = function() {
  return /** @type{?proto.authzed.api.v1.RelationshipFilter} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.RelationshipFilter, 1));
};


/**
 * @param {?proto.authzed.api.v1.RelationshipFilter|undefined} value
 * @return {!proto.authzed.api.v1.DeleteRelationshipsRequest} returns this
*/
proto.authzed.api.v1.DeleteRelationshipsRequest.prototype.setRelationshipFilter = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.DeleteRelationshipsRequest} returns this
 */
proto.authzed.api.v1.DeleteRelationshipsRequest.prototype.clearRelationshipFilter = function() {
  return this.setRelationshipFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.DeleteRelationshipsRequest.prototype.hasRelationshipFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Precondition optional_preconditions = 2;
 * @return {!Array<!proto.authzed.api.v1.Precondition>}
 */
proto.authzed.api.v1.DeleteRelationshipsRequest.prototype.getOptionalPreconditionsList = function() {
  return /** @type{!Array<!proto.authzed.api.v1.Precondition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.authzed.api.v1.Precondition, 2));
};


/**
 * @param {!Array<!proto.authzed.api.v1.Precondition>} value
 * @return {!proto.authzed.api.v1.DeleteRelationshipsRequest} returns this
*/
proto.authzed.api.v1.DeleteRelationshipsRequest.prototype.setOptionalPreconditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.authzed.api.v1.Precondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.authzed.api.v1.Precondition}
 */
proto.authzed.api.v1.DeleteRelationshipsRequest.prototype.addOptionalPreconditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.authzed.api.v1.Precondition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.authzed.api.v1.DeleteRelationshipsRequest} returns this
 */
proto.authzed.api.v1.DeleteRelationshipsRequest.prototype.clearOptionalPreconditionsList = function() {
  return this.setOptionalPreconditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.DeleteRelationshipsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.DeleteRelationshipsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.DeleteRelationshipsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.DeleteRelationshipsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deletedAt: (f = msg.getDeletedAt()) && authzed_api_v1_core_pb.ZedToken.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.DeleteRelationshipsResponse}
 */
proto.authzed.api.v1.DeleteRelationshipsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.DeleteRelationshipsResponse;
  return proto.authzed.api.v1.DeleteRelationshipsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.DeleteRelationshipsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.DeleteRelationshipsResponse}
 */
proto.authzed.api.v1.DeleteRelationshipsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v1_core_pb.ZedToken;
      reader.readMessage(value,authzed_api_v1_core_pb.ZedToken.deserializeBinaryFromReader);
      msg.setDeletedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.DeleteRelationshipsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.DeleteRelationshipsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.DeleteRelationshipsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.DeleteRelationshipsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeletedAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      authzed_api_v1_core_pb.ZedToken.serializeBinaryToWriter
    );
  }
};


/**
 * optional ZedToken deleted_at = 1;
 * @return {?proto.authzed.api.v1.ZedToken}
 */
proto.authzed.api.v1.DeleteRelationshipsResponse.prototype.getDeletedAt = function() {
  return /** @type{?proto.authzed.api.v1.ZedToken} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.ZedToken, 1));
};


/**
 * @param {?proto.authzed.api.v1.ZedToken|undefined} value
 * @return {!proto.authzed.api.v1.DeleteRelationshipsResponse} returns this
*/
proto.authzed.api.v1.DeleteRelationshipsResponse.prototype.setDeletedAt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.DeleteRelationshipsResponse} returns this
 */
proto.authzed.api.v1.DeleteRelationshipsResponse.prototype.clearDeletedAt = function() {
  return this.setDeletedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.DeleteRelationshipsResponse.prototype.hasDeletedAt = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.CheckPermissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.CheckPermissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.CheckPermissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.CheckPermissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    consistency: (f = msg.getConsistency()) && proto.authzed.api.v1.Consistency.toObject(includeInstance, f),
    resource: (f = msg.getResource()) && authzed_api_v1_core_pb.ObjectReference.toObject(includeInstance, f),
    permission: jspb.Message.getFieldWithDefault(msg, 3, ""),
    subject: (f = msg.getSubject()) && authzed_api_v1_core_pb.SubjectReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.CheckPermissionRequest}
 */
proto.authzed.api.v1.CheckPermissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.CheckPermissionRequest;
  return proto.authzed.api.v1.CheckPermissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.CheckPermissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.CheckPermissionRequest}
 */
proto.authzed.api.v1.CheckPermissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authzed.api.v1.Consistency;
      reader.readMessage(value,proto.authzed.api.v1.Consistency.deserializeBinaryFromReader);
      msg.setConsistency(value);
      break;
    case 2:
      var value = new authzed_api_v1_core_pb.ObjectReference;
      reader.readMessage(value,authzed_api_v1_core_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPermission(value);
      break;
    case 4:
      var value = new authzed_api_v1_core_pb.SubjectReference;
      reader.readMessage(value,authzed_api_v1_core_pb.SubjectReference.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.CheckPermissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.CheckPermissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.CheckPermissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.CheckPermissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsistency();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.authzed.api.v1.Consistency.serializeBinaryToWriter
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      authzed_api_v1_core_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = message.getPermission();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      authzed_api_v1_core_pb.SubjectReference.serializeBinaryToWriter
    );
  }
};


/**
 * optional Consistency consistency = 1;
 * @return {?proto.authzed.api.v1.Consistency}
 */
proto.authzed.api.v1.CheckPermissionRequest.prototype.getConsistency = function() {
  return /** @type{?proto.authzed.api.v1.Consistency} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.Consistency, 1));
};


/**
 * @param {?proto.authzed.api.v1.Consistency|undefined} value
 * @return {!proto.authzed.api.v1.CheckPermissionRequest} returns this
*/
proto.authzed.api.v1.CheckPermissionRequest.prototype.setConsistency = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.CheckPermissionRequest} returns this
 */
proto.authzed.api.v1.CheckPermissionRequest.prototype.clearConsistency = function() {
  return this.setConsistency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.CheckPermissionRequest.prototype.hasConsistency = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ObjectReference resource = 2;
 * @return {?proto.authzed.api.v1.ObjectReference}
 */
proto.authzed.api.v1.CheckPermissionRequest.prototype.getResource = function() {
  return /** @type{?proto.authzed.api.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.ObjectReference, 2));
};


/**
 * @param {?proto.authzed.api.v1.ObjectReference|undefined} value
 * @return {!proto.authzed.api.v1.CheckPermissionRequest} returns this
*/
proto.authzed.api.v1.CheckPermissionRequest.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.CheckPermissionRequest} returns this
 */
proto.authzed.api.v1.CheckPermissionRequest.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.CheckPermissionRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string permission = 3;
 * @return {string}
 */
proto.authzed.api.v1.CheckPermissionRequest.prototype.getPermission = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.CheckPermissionRequest} returns this
 */
proto.authzed.api.v1.CheckPermissionRequest.prototype.setPermission = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional SubjectReference subject = 4;
 * @return {?proto.authzed.api.v1.SubjectReference}
 */
proto.authzed.api.v1.CheckPermissionRequest.prototype.getSubject = function() {
  return /** @type{?proto.authzed.api.v1.SubjectReference} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.SubjectReference, 4));
};


/**
 * @param {?proto.authzed.api.v1.SubjectReference|undefined} value
 * @return {!proto.authzed.api.v1.CheckPermissionRequest} returns this
*/
proto.authzed.api.v1.CheckPermissionRequest.prototype.setSubject = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.CheckPermissionRequest} returns this
 */
proto.authzed.api.v1.CheckPermissionRequest.prototype.clearSubject = function() {
  return this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.CheckPermissionRequest.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.CheckPermissionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.CheckPermissionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.CheckPermissionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.CheckPermissionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    checkedAt: (f = msg.getCheckedAt()) && authzed_api_v1_core_pb.ZedToken.toObject(includeInstance, f),
    permissionship: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.CheckPermissionResponse}
 */
proto.authzed.api.v1.CheckPermissionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.CheckPermissionResponse;
  return proto.authzed.api.v1.CheckPermissionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.CheckPermissionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.CheckPermissionResponse}
 */
proto.authzed.api.v1.CheckPermissionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v1_core_pb.ZedToken;
      reader.readMessage(value,authzed_api_v1_core_pb.ZedToken.deserializeBinaryFromReader);
      msg.setCheckedAt(value);
      break;
    case 2:
      var value = /** @type {!proto.authzed.api.v1.CheckPermissionResponse.Permissionship} */ (reader.readEnum());
      msg.setPermissionship(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.CheckPermissionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.CheckPermissionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.CheckPermissionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.CheckPermissionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCheckedAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      authzed_api_v1_core_pb.ZedToken.serializeBinaryToWriter
    );
  }
  f = message.getPermissionship();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.authzed.api.v1.CheckPermissionResponse.Permissionship = {
  PERMISSIONSHIP_UNSPECIFIED: 0,
  PERMISSIONSHIP_NO_PERMISSION: 1,
  PERMISSIONSHIP_HAS_PERMISSION: 2
};

/**
 * optional ZedToken checked_at = 1;
 * @return {?proto.authzed.api.v1.ZedToken}
 */
proto.authzed.api.v1.CheckPermissionResponse.prototype.getCheckedAt = function() {
  return /** @type{?proto.authzed.api.v1.ZedToken} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.ZedToken, 1));
};


/**
 * @param {?proto.authzed.api.v1.ZedToken|undefined} value
 * @return {!proto.authzed.api.v1.CheckPermissionResponse} returns this
*/
proto.authzed.api.v1.CheckPermissionResponse.prototype.setCheckedAt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.CheckPermissionResponse} returns this
 */
proto.authzed.api.v1.CheckPermissionResponse.prototype.clearCheckedAt = function() {
  return this.setCheckedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.CheckPermissionResponse.prototype.hasCheckedAt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Permissionship permissionship = 2;
 * @return {!proto.authzed.api.v1.CheckPermissionResponse.Permissionship}
 */
proto.authzed.api.v1.CheckPermissionResponse.prototype.getPermissionship = function() {
  return /** @type {!proto.authzed.api.v1.CheckPermissionResponse.Permissionship} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.authzed.api.v1.CheckPermissionResponse.Permissionship} value
 * @return {!proto.authzed.api.v1.CheckPermissionResponse} returns this
 */
proto.authzed.api.v1.CheckPermissionResponse.prototype.setPermissionship = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.ExpandPermissionTreeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.ExpandPermissionTreeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    consistency: (f = msg.getConsistency()) && proto.authzed.api.v1.Consistency.toObject(includeInstance, f),
    resource: (f = msg.getResource()) && authzed_api_v1_core_pb.ObjectReference.toObject(includeInstance, f),
    permission: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.ExpandPermissionTreeRequest}
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.ExpandPermissionTreeRequest;
  return proto.authzed.api.v1.ExpandPermissionTreeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.ExpandPermissionTreeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.ExpandPermissionTreeRequest}
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authzed.api.v1.Consistency;
      reader.readMessage(value,proto.authzed.api.v1.Consistency.deserializeBinaryFromReader);
      msg.setConsistency(value);
      break;
    case 2:
      var value = new authzed_api_v1_core_pb.ObjectReference;
      reader.readMessage(value,authzed_api_v1_core_pb.ObjectReference.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPermission(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.ExpandPermissionTreeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.ExpandPermissionTreeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsistency();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.authzed.api.v1.Consistency.serializeBinaryToWriter
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      authzed_api_v1_core_pb.ObjectReference.serializeBinaryToWriter
    );
  }
  f = message.getPermission();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Consistency consistency = 1;
 * @return {?proto.authzed.api.v1.Consistency}
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.prototype.getConsistency = function() {
  return /** @type{?proto.authzed.api.v1.Consistency} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.Consistency, 1));
};


/**
 * @param {?proto.authzed.api.v1.Consistency|undefined} value
 * @return {!proto.authzed.api.v1.ExpandPermissionTreeRequest} returns this
*/
proto.authzed.api.v1.ExpandPermissionTreeRequest.prototype.setConsistency = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.ExpandPermissionTreeRequest} returns this
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.prototype.clearConsistency = function() {
  return this.setConsistency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.prototype.hasConsistency = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ObjectReference resource = 2;
 * @return {?proto.authzed.api.v1.ObjectReference}
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.prototype.getResource = function() {
  return /** @type{?proto.authzed.api.v1.ObjectReference} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.ObjectReference, 2));
};


/**
 * @param {?proto.authzed.api.v1.ObjectReference|undefined} value
 * @return {!proto.authzed.api.v1.ExpandPermissionTreeRequest} returns this
*/
proto.authzed.api.v1.ExpandPermissionTreeRequest.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.ExpandPermissionTreeRequest} returns this
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.prototype.hasResource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string permission = 3;
 * @return {string}
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.prototype.getPermission = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.ExpandPermissionTreeRequest} returns this
 */
proto.authzed.api.v1.ExpandPermissionTreeRequest.prototype.setPermission = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.ExpandPermissionTreeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.ExpandPermissionTreeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.ExpandPermissionTreeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.ExpandPermissionTreeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    expandedAt: (f = msg.getExpandedAt()) && authzed_api_v1_core_pb.ZedToken.toObject(includeInstance, f),
    treeRoot: (f = msg.getTreeRoot()) && authzed_api_v1_core_pb.PermissionRelationshipTree.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.ExpandPermissionTreeResponse}
 */
proto.authzed.api.v1.ExpandPermissionTreeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.ExpandPermissionTreeResponse;
  return proto.authzed.api.v1.ExpandPermissionTreeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.ExpandPermissionTreeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.ExpandPermissionTreeResponse}
 */
proto.authzed.api.v1.ExpandPermissionTreeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v1_core_pb.ZedToken;
      reader.readMessage(value,authzed_api_v1_core_pb.ZedToken.deserializeBinaryFromReader);
      msg.setExpandedAt(value);
      break;
    case 2:
      var value = new authzed_api_v1_core_pb.PermissionRelationshipTree;
      reader.readMessage(value,authzed_api_v1_core_pb.PermissionRelationshipTree.deserializeBinaryFromReader);
      msg.setTreeRoot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.ExpandPermissionTreeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.ExpandPermissionTreeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.ExpandPermissionTreeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.ExpandPermissionTreeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExpandedAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      authzed_api_v1_core_pb.ZedToken.serializeBinaryToWriter
    );
  }
  f = message.getTreeRoot();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      authzed_api_v1_core_pb.PermissionRelationshipTree.serializeBinaryToWriter
    );
  }
};


/**
 * optional ZedToken expanded_at = 1;
 * @return {?proto.authzed.api.v1.ZedToken}
 */
proto.authzed.api.v1.ExpandPermissionTreeResponse.prototype.getExpandedAt = function() {
  return /** @type{?proto.authzed.api.v1.ZedToken} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.ZedToken, 1));
};


/**
 * @param {?proto.authzed.api.v1.ZedToken|undefined} value
 * @return {!proto.authzed.api.v1.ExpandPermissionTreeResponse} returns this
*/
proto.authzed.api.v1.ExpandPermissionTreeResponse.prototype.setExpandedAt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.ExpandPermissionTreeResponse} returns this
 */
proto.authzed.api.v1.ExpandPermissionTreeResponse.prototype.clearExpandedAt = function() {
  return this.setExpandedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.ExpandPermissionTreeResponse.prototype.hasExpandedAt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PermissionRelationshipTree tree_root = 2;
 * @return {?proto.authzed.api.v1.PermissionRelationshipTree}
 */
proto.authzed.api.v1.ExpandPermissionTreeResponse.prototype.getTreeRoot = function() {
  return /** @type{?proto.authzed.api.v1.PermissionRelationshipTree} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.PermissionRelationshipTree, 2));
};


/**
 * @param {?proto.authzed.api.v1.PermissionRelationshipTree|undefined} value
 * @return {!proto.authzed.api.v1.ExpandPermissionTreeResponse} returns this
*/
proto.authzed.api.v1.ExpandPermissionTreeResponse.prototype.setTreeRoot = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.ExpandPermissionTreeResponse} returns this
 */
proto.authzed.api.v1.ExpandPermissionTreeResponse.prototype.clearTreeRoot = function() {
  return this.setTreeRoot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.ExpandPermissionTreeResponse.prototype.hasTreeRoot = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.LookupResourcesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.LookupResourcesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.LookupResourcesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.LookupResourcesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    consistency: (f = msg.getConsistency()) && proto.authzed.api.v1.Consistency.toObject(includeInstance, f),
    resourceObjectType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    permission: jspb.Message.getFieldWithDefault(msg, 3, ""),
    subject: (f = msg.getSubject()) && authzed_api_v1_core_pb.SubjectReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.LookupResourcesRequest}
 */
proto.authzed.api.v1.LookupResourcesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.LookupResourcesRequest;
  return proto.authzed.api.v1.LookupResourcesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.LookupResourcesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.LookupResourcesRequest}
 */
proto.authzed.api.v1.LookupResourcesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.authzed.api.v1.Consistency;
      reader.readMessage(value,proto.authzed.api.v1.Consistency.deserializeBinaryFromReader);
      msg.setConsistency(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceObjectType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPermission(value);
      break;
    case 4:
      var value = new authzed_api_v1_core_pb.SubjectReference;
      reader.readMessage(value,authzed_api_v1_core_pb.SubjectReference.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.LookupResourcesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.LookupResourcesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.LookupResourcesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.LookupResourcesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsistency();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.authzed.api.v1.Consistency.serializeBinaryToWriter
    );
  }
  f = message.getResourceObjectType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPermission();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      authzed_api_v1_core_pb.SubjectReference.serializeBinaryToWriter
    );
  }
};


/**
 * optional Consistency consistency = 1;
 * @return {?proto.authzed.api.v1.Consistency}
 */
proto.authzed.api.v1.LookupResourcesRequest.prototype.getConsistency = function() {
  return /** @type{?proto.authzed.api.v1.Consistency} */ (
    jspb.Message.getWrapperField(this, proto.authzed.api.v1.Consistency, 1));
};


/**
 * @param {?proto.authzed.api.v1.Consistency|undefined} value
 * @return {!proto.authzed.api.v1.LookupResourcesRequest} returns this
*/
proto.authzed.api.v1.LookupResourcesRequest.prototype.setConsistency = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.LookupResourcesRequest} returns this
 */
proto.authzed.api.v1.LookupResourcesRequest.prototype.clearConsistency = function() {
  return this.setConsistency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.LookupResourcesRequest.prototype.hasConsistency = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string resource_object_type = 2;
 * @return {string}
 */
proto.authzed.api.v1.LookupResourcesRequest.prototype.getResourceObjectType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.LookupResourcesRequest} returns this
 */
proto.authzed.api.v1.LookupResourcesRequest.prototype.setResourceObjectType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string permission = 3;
 * @return {string}
 */
proto.authzed.api.v1.LookupResourcesRequest.prototype.getPermission = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.LookupResourcesRequest} returns this
 */
proto.authzed.api.v1.LookupResourcesRequest.prototype.setPermission = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional SubjectReference subject = 4;
 * @return {?proto.authzed.api.v1.SubjectReference}
 */
proto.authzed.api.v1.LookupResourcesRequest.prototype.getSubject = function() {
  return /** @type{?proto.authzed.api.v1.SubjectReference} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.SubjectReference, 4));
};


/**
 * @param {?proto.authzed.api.v1.SubjectReference|undefined} value
 * @return {!proto.authzed.api.v1.LookupResourcesRequest} returns this
*/
proto.authzed.api.v1.LookupResourcesRequest.prototype.setSubject = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.LookupResourcesRequest} returns this
 */
proto.authzed.api.v1.LookupResourcesRequest.prototype.clearSubject = function() {
  return this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.LookupResourcesRequest.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.authzed.api.v1.LookupResourcesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.authzed.api.v1.LookupResourcesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.authzed.api.v1.LookupResourcesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.LookupResourcesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    lookedUpAt: (f = msg.getLookedUpAt()) && authzed_api_v1_core_pb.ZedToken.toObject(includeInstance, f),
    resourceObjectId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.authzed.api.v1.LookupResourcesResponse}
 */
proto.authzed.api.v1.LookupResourcesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.authzed.api.v1.LookupResourcesResponse;
  return proto.authzed.api.v1.LookupResourcesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.authzed.api.v1.LookupResourcesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.authzed.api.v1.LookupResourcesResponse}
 */
proto.authzed.api.v1.LookupResourcesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new authzed_api_v1_core_pb.ZedToken;
      reader.readMessage(value,authzed_api_v1_core_pb.ZedToken.deserializeBinaryFromReader);
      msg.setLookedUpAt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceObjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.authzed.api.v1.LookupResourcesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.authzed.api.v1.LookupResourcesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.authzed.api.v1.LookupResourcesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.authzed.api.v1.LookupResourcesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLookedUpAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      authzed_api_v1_core_pb.ZedToken.serializeBinaryToWriter
    );
  }
  f = message.getResourceObjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ZedToken looked_up_at = 1;
 * @return {?proto.authzed.api.v1.ZedToken}
 */
proto.authzed.api.v1.LookupResourcesResponse.prototype.getLookedUpAt = function() {
  return /** @type{?proto.authzed.api.v1.ZedToken} */ (
    jspb.Message.getWrapperField(this, authzed_api_v1_core_pb.ZedToken, 1));
};


/**
 * @param {?proto.authzed.api.v1.ZedToken|undefined} value
 * @return {!proto.authzed.api.v1.LookupResourcesResponse} returns this
*/
proto.authzed.api.v1.LookupResourcesResponse.prototype.setLookedUpAt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.authzed.api.v1.LookupResourcesResponse} returns this
 */
proto.authzed.api.v1.LookupResourcesResponse.prototype.clearLookedUpAt = function() {
  return this.setLookedUpAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.authzed.api.v1.LookupResourcesResponse.prototype.hasLookedUpAt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string resource_object_id = 2;
 * @return {string}
 */
proto.authzed.api.v1.LookupResourcesResponse.prototype.getResourceObjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.authzed.api.v1.LookupResourcesResponse} returns this
 */
proto.authzed.api.v1.LookupResourcesResponse.prototype.setResourceObjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.authzed.api.v1);
